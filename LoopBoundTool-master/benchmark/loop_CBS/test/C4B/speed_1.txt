Program Body
{
  int break_1_flag;
  break_1_flag = 0;
  int n;
  int x;
  x = 0;
  int y;
  y = 0;
  while ((1 > 0) && (break_1_flag == 0))
  {
    break_1_flag = 0;
    if (x < n)
    {
      y = y + 1;
      x = x + 1;
    }
    else
      if (y > 0)
    {
      y = y - 1;
    }
    else
    {
      break_1_flag = 1;
    }


  }

}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ y:int x:int break_1_flag:int n:int}

Output in normal notation:
1. Frame axioms:
n1 = n

2. Output equations:
y1 = y7(_N1)
x1 = x7(_N1)
break_1_flag1 = break_1_flag7(_N1)

3. Other axioms:
y7((_n1+1)) = ite((x7(_n1)<n),(y7(_n1)+1),ite((y7(_n1)>0),(y7(_n1)-1),y7(_n1)))
x7((_n1+1)) = ite((x7(_n1)<n),(x7(_n1)+1),x7(_n1))
break_1_flag7((_n1+1)) = ite((x7(_n1)<n),0,ite((y7(_n1)>0),0,1))
y7(0) = 0
x7(0) = 0
break_1_flag7(0) = 0
((1<=0) or (break_1_flag7(_N1)!=0))
(_n1<_N1) -> ((1>0) and (break_1_flag7(_n1)==0))

4. Assumption :

5. Assertion :
VIAP_STANDARD_OUTPUT_True

Program Body
{
  int break_1_flag;
  break_1_flag = 0;
  int n;
  int m;
  int x;
  x = 0;
  int y;
  y = 0;
  while ((1 > 0) && (break_1_flag == 0))
  {
    break_1_flag = 0;
    if (x < n)
    {
      x = x + 1;
      y = y + 1;
    }
    else
      if (y < m)
    {
      x = x + 1;
      y = y + 1;
    }
    else
    {
      break_1_flag = 1;
    }


  }

}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ y:int x:int m:int break_1_flag:int n:int}

Output in normal notation:
1. Frame axioms:
m1 = m
n1 = n

2. Output equations:
y1 = y8(_N1)
x1 = x8(_N1)
break_1_flag1 = break_1_flag8(_N1)

3. Other axioms:
y8((_n1+1)) = ite((x8(_n1)<n),(y8(_n1)+1),ite((y8(_n1)<m),(y8(_n1)+1),y8(_n1)))
x8((_n1+1)) = ite((x8(_n1)<n),(x8(_n1)+1),ite((y8(_n1)<m),(x8(_n1)+1),x8(_n1)))
break_1_flag8((_n1+1)) = ite((x8(_n1)<n),0,ite((y8(_n1)<m),0,1))
y8(0) = 0
x8(0) = 0
break_1_flag8(0) = 0
((1<=0) or (break_1_flag8(_N1)!=0))
(_n1<_N1) -> ((1>0) and (break_1_flag8(_n1)==0))

4. Assumption :

5. Assertion :
VIAP_STANDARD_OUTPUT_True

pritom@pritom-VirtualBox:~/mainDev/viap_new$ ./viap_tool.py --spec=ReachSafety.prp rec_eq/divHard.c
Program Body
{
  int X;
  int Y;
  int r;
  int ds;
  int p;
  int q;
  r = X;
  ds = Y;
  p = 1;
  q = 0;
  while (r >= ds)
  {
    ds = 2 * ds;
    p = 2 * p;
  }

  while (p != 1)
  {
    ds = ds / 2;
    p = p / 2;
    if (r >= ds)
    {
      r = r - ds;
      q = q + p;
    }

  }

}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ q:int p:int r:int Y:int X:int ds:int}

Output in normal notation:
1. Frame axioms:
Y1 = Y
X1 = X

2. Output equations:
q1 = q7(_N2)
p1 = p7(_N2)
r1 = r7(_N2)
ds1 = ds7(_N2)

3. Other axioms:
p2((_n1+1)) = (2*p2(_n1))
ds2((_n1+1)) = (2*ds2(_n1))
p2(0) = 1
ds2(0) = Y
(X<ds2(_N1))
(_n1<_N1) -> (X>=ds2(_n1))
q7((_n2+1)) = ite((r7(_n2)>=(ds7(_n2)/2)),(q7(_n2)+(p7(_n2)/2)),q7(_n2))
p7((_n2+1)) = (p7(_n2)/2)
r7((_n2+1)) = ite((r7(_n2)>=(ds7(_n2)/2)),(r7(_n2)-(ds7(_n2)/2)),r7(_n2))
ds7((_n2+1)) = (ds7(_n2)/2)
q7(0) = 0
p7(0) = p2(_N1)
r7(0) = X
ds7(0) = ds2(_N1)
(p7(_N2)==1)
(_n2<_N2) -> (p7(_n2)!=1)

4. Assumption :

5. Assertion :
